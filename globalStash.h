#ifndef globalStash_h
#define globalStash_h
#include "Arduino.h"



/*
   This is a struct that contains all main game objects
   a pointer to it is passed to objects when they are initialized
   A simply way of keeping track of objects vs passing various pointers

   Gloabls are 1st defined/allocated

*/

struct displayPosition {
  unsigned char row;
  unsigned char col;
};

class Player;
class Controller;
class Display;
class Defense;
class ScoreKeeper;
class Audio;



struct menuItem {
  unsigned char currentIndex;
  unsigned char maxIndex;
  unsigned char displayValue[10];
  unsigned char dataValue[10];
};

struct GlobalStash {

  unsigned char gameMode;
  unsigned char defManTackle;

  Controller* controller;
  Player* player;
  Display* display;
  Defense** defenseTeam;
  ScoreKeeper* scoreKeeper;
  Audio* audio;

  menuItem animation= {1,1,{'N','Y',0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0}};
  menuItem brightness= {5,9,{48,49,50,51,52,53,54,55,56,57},{0,25,50,100,128,153,178,203,228,255}};
  menuItem contrast= {5,9,{48,49,50,51,52,53,54,55,56,57},{255,228,203,178,153,128,100,50,25,0}};
  menuItem difficulty= {0,2,{'L','M','H',0,0,0,0,0,0,0},{150,106,56,0,0,0,0,0,0,0}}; // <<4
  menuItem shortGame= {0,1,{'N','Y',0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0}};
  menuItem volume= {1,4,{48,49,50,51,52,0,0,0,0,0},{8,4,2,1,0,0,0,0,0,0}};

};

//*** "Notes" are ((CPUfreq / 256) / noteFreq )/2 
// ... aka a pre-calc count of how many times 1/2 note freq fits into the CPUfreq
// ... 1/2 because needs to cover both high and low freq cycle
// ... example:  C3 freq=130.81, CPU assumed to be 16MHZ
//                value = ((16,000,000 / 256) / 130.81 ) / 2
//                      = (62,500 / 130.81 ) / 2
//                      = (477.79 / 2 ) =~ 239    
// ... divided these by 2 to fit more into 0/255 range of bytes
// ... play song code was adjusted to multiply <<2 back
#define NOTE_C2 (15625.0/65)+0.5
#define NOTE_CS2 (15625.0/69)+0.5
#define NOTE_D2 (15625.0/73)+0.5
#define NOTE_DS2 (15625.0/78)+0.5
#define NOTE_E2  (15625.0/82)+0.5
#define NOTE_F2  (15625.0/87)+0.5
#define NOTE_FS2 (15625.0/93)+0.5
#define NOTE_G2  (15625.0/98)+0.5
#define NOTE_GS2 (15625.0/104)+0.5
#define NOTE_A2  (15625.0/110)+0.5
#define NOTE_AS2 (15625.0/117)+0.5
#define NOTE_B2  (15625.0/123)+0.5
#define NOTE_C3  (15625.0/131.0)+0.5
#define NOTE_CS3 (15625.0/139.0)+0.5
#define NOTE_D3  (15625.0/147.0)+0.5
#define NOTE_DS3 (15625.0/156.0)+0.5
#define NOTE_E3  (15625.0/165.0)+0.5
#define NOTE_F3  (15625.0/175.0)+0.5
#define NOTE_FS3 (15625.0/185.0)+0.5
#define NOTE_G3  (15625.0/196.0)+0.5
#define NOTE_GS3 (15625.0/208.0)+0.5
#define NOTE_A3  (15625.0/220.0)+0.5
#define NOTE_AS3 (15625.0/233.0)+0.5
#define NOTE_B3  (15625.0/247.0)+0.5

#define NOTE_C4  (15625.0/262.0)+0.5
#define NOTE_CS4 (15625.0/277.0)+0.5
#define NOTE_D4  (15625.0/294.0)+0.5
#define NOTE_DS4 (15625.0/311.0)+0.5
#define NOTE_E4  (15625.0/330.0)+0.5
#define NOTE_F4  (15625.0/349.0)+0.5
#define NOTE_FS4 (15625.0/370.0)+0.5
#define NOTE_G4  (15625.0/392.0)+0.5
#define NOTE_GS4 (15625.0/415.0)+0.5
#define NOTE_A4  (15625.0/440.0)+0.5
#define NOTE_AS4 (15625.0/466.0)+0.5
#define NOTE_B4  (15625.0/494.0)+0.5

#define NOTE_C5  (15625.0/524.0)+0.5
#define NOTE_CS5 (15625.0/554)+0.5
#define NOTE_D5 (15625.0/587)+0.5
#define NOTE_DS5 (15625.0/622)+0.5
#define NOTE_E5 (15625.0/659)+0.5
#define NOTE_F5 (15625.0/698)+0.5
#define NOTE_FS5 (15625.0/740)+0.5
#define NOTE_G5 (15625.0/784)+0.5
#define NOTE_GS5 (15625.0/831)+0.5
#define NOTE_A5 (15625.0/880)+0.5



//*** Note "Durations" are based upon 16MHZ CPU /256 = 62500 = 1 second
// .... this is the # of times the compareMatch interupt will be called in 1 sec
// .... for eample:  QTR_NOTE assumes 120 BPM with beat on qtr notes = 2 qtr notes per sec
//            QTR_NOTE = (16MHZ / 256) / 2 = 31250
// ... we can only go up to half notes (62500) to fit into an unsigned int ... just play 2 1/2s to = whole
//      no delay is included ... delays need to be added as zero Freq with short duration 
//        ... assume delay is 25% of note lenght and note is 75%
#define NOTE_16 7813 * 0.75
#define NOTE_8  15625 * 0.75
#define NOTE_4  31250 * 0.75
#define NOTE_3  46896 * 0.75
#define NOTE_2  62500 * 0.75

#define NOTE_16P 7813 * 0.25
#define NOTE_8P  15625 * 0.25
#define NOTE_4P  31250 * 0.25
#define NOTE_3P  46896 * 0.75
#define NOTE_2P  62500 * 0.25
#define NOTE_1P  62500 * 0.5


//*** ProgramMem stuff *****
   //--- messages --
   const char splashMsg[8][16] PROGMEM = {"                "
                                      ,"  *** LED ***   "
                                      ,"    FOOTBALL    "
                                      ,"*** 1st DOWN ***"
                                      ,"** TOUCH DOWN **"
                                      ," **** PUNT **** "
                                      ,"***  MISSED  ***"
                                      ,"** FIELD GOAL **"};

   const char menu[8][16] PROGMEM = {  " Animation On Y "
                                      ," Brightness   5 "
                                      ," Contrast     5 "
                                      ," Difficulty   1 "
                                      ," Short Game   N "
                                      ," Volume Level 5 "
                                      ," EXIT MENU    Y "
                                      ,"                "};

   
    //--- Locations on a map of the LCD squares ... top left is 20,20
    //struct rect {byte left; byte top; byte right; byte bot;};
    const unsigned char sRect[128] PROGMEM = {20,20,24,27,26,20,30,27,32,20,36,27,38,20,42,27
                    ,44,20,48,27,50,20,54,27,56,20,60,27,62,20,66,27
                    ,68,20,72,27,74,20,78,27,80,20,84,27,86,20,90,27
                    ,92,20,96,27,98,20,102,27,104,20,108,27,110,20,114,27
                    ,20,29,24,36,26,29,30,36,32,29,36,36,38,29,42,36
                    ,44,29,48,36,50,29,54,36,56,29,60,36,62,29,66,36
                    ,68,29,72,36,74,29,78,36,80,29,84,36,86,29,90,36
                    ,92,29,96,36,98,29,102,36,104,29,108,36,110,29,114,36
                    };
     
    //--- football object ---
    //rect oRect = {fbStartLeft,24,fbStartRight,32};                
    const unsigned int ballChars[9] PROGMEM = {0b0000001111000000
                            ,0b0001111111111000
                            ,0b0111111111111110
                            ,0b1111111111111111
                            ,0b1111111111111111
                            ,0b1111111111111111
                            ,0b0111111111111110
                            ,0b0001111111111000
                            ,0b0000001111000000};

    const unsigned int man1[] PROGMEM = {
                        //0b0000011000000000
                        0b0000111100000000
                        ,0b0000111000000000
                        ,0b0000101100000000
                        ,0b0000011000000000 //5
                        ,0b0000000000000000
                        ,0b0000111000000000
                        ,0b0000111111100000
                        ,0b0011111111000000
                        ,0b0111111100000000 //10
                        ,0b0000111100000000 
                        ,0b0000111000000000
                        ,0b0000111100000000
                        ,0b0000110110000000
                        ,0b0011110110000000 //15
                        ,0b0011110010000000
                        ,0b0011000010000000
                        ,0b0000000000000000};

    const unsigned int man2[] PROGMEM = {0b0000011000000000
                        ,0b0000111100000000
                        ,0b0000111000000000
                        ,0b0000101100000000
                        ,0b0000011000000000 //5
                        ,0b0000000000000000
                        ,0b0000011000000000
                        ,0b0000111100000000
                        ,0b0000111100000000
                        ,0b0000111100000000 //10
                        ,0b0000011100000000 
                        ,0b0000111100000000
                        ,0b0000111100000000
                        ,0b0000111100000000
                        ,0b0000011100000000 //15
                        ,0b0000011111000000
                        ,0b0000011111000000};    


    const unsigned char  playerDefRow1n2BM[8] PROGMEM = {
      0b00000,
      0b10101,
      0b00000,
      0b00000,
      0b00000,
      0b00000,
      0b11111,
      0b00000
    };
     const unsigned char  playerDefRow2n1BM[8] PROGMEM = {
      0b00000,
      0b11111,
      0b00000,
      0b00000,
      0b00000,
      0b00000,
      0b10101,
      0b00000
    };
    
     const unsigned char  defenseRow1n2BM[8] PROGMEM = {
      0b00000,
      0b11111,
      0b00000,
      0b00000,
      0b00000,
      0b00000,
      0b11111,
      0b00000
    };
     const unsigned char  defenseRow1BM[8] PROGMEM = {
      0b00000,
      0b11111,
      0b00000,
      0b00000,
      0b00000,
      0b00000,
      0b00000,
      0b00000
    };

     const unsigned char  endZoneRow0BM[8] PROGMEM = {
      0b00000,
      0b00000,
      0b00000,
      0b11111,
      0b00100,
      0b00100,
      0b00100,
      0b00100
    };
     const unsigned char  endZoneRow1BM[8] PROGMEM = {
      0b00100,
      0b00100,
      0b00100,
      0b11111,
      0b00000,
      0b00000,
      0b00000,
      0b00000
    };

  
//**********************************************
//  Big Blob of data for the songs / sounds 
//    + public wrapper methods for easy play
//**********************************************
const unsigned char ChargeMelody[] PROGMEM ={NOTE_C3,0,NOTE_F3,0,NOTE_A4,0,NOTE_C5,0,NOTE_A4,0,NOTE_C5,0};
const unsigned int ChargeDurations[] PROGMEM = {NOTE_16,NOTE_16P,NOTE_16,NOTE_16P,NOTE_16,NOTE_16P
                                  ,NOTE_8,NOTE_8P,NOTE_16,NOTE_16P,NOTE_2,NOTE_2P};

const unsigned char RockMelody[] PROGMEM ={NOTE_G4,0,NOTE_F4,0,NOTE_E4,0,NOTE_D4,0,NOTE_E4,0,NOTE_E4,NOTE_E4,0,NOTE_E4,0,NOTE_E4,0,
                                           NOTE_A3,0,NOTE_B3,0,NOTE_D3,0,NOTE_E3,0,
                                           NOTE_G4,0,NOTE_F4,0,NOTE_E4,0,NOTE_D4,0,NOTE_E4,0,NOTE_E4,0};
const unsigned int RockDurations[] PROGMEM = {NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_4,NOTE_4P,NOTE_3,NOTE_4,NOTE_1P,NOTE_4,NOTE_4P,NOTE_3,NOTE_4P,
                                  NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,
                                  NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_2,NOTE_2P,NOTE_4,NOTE_4P,NOTE_3,NOTE_3P
                                  };

const unsigned char ThunderMelody[] PROGMEM ={NOTE_B2,0,NOTE_D3,0,NOTE_B2,0,NOTE_D3,0,NOTE_B2,0,NOTE_D3,0,NOTE_E3,0,NOTE_D3,0,NOTE_FS3,0,NOTE_FS3,0,NOTE_FS3,0,
                                              NOTE_B2,0,NOTE_D3,0,NOTE_B2,0,NOTE_D3,0,NOTE_B2,0,NOTE_D3,0,NOTE_E3,0,NOTE_D3,0,NOTE_FS3,0,NOTE_FS3,0,NOTE_FS3,0
                                              //NOTE_B2,0,NOTE_B2,0
                                              };
                                              
const unsigned int ThunderDurations[] PROGMEM = {NOTE_4,NOTE_4P,NOTE_4,NOTE_2P,
                                        NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_4,NOTE_4P,
                                        NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_4,NOTE_4P,NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,

                                        NOTE_4,NOTE_4P,NOTE_4,NOTE_2P,
                                        NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_4,NOTE_4P,
                                        NOTE_8,NOTE_8P,NOTE_8,NOTE_8P,NOTE_4,NOTE_4P,NOTE_4,NOTE_4P
                                        //NOTE_4,NOTE_4P,NOTE_4,NOTE_2P
                                  };



const unsigned char MrTouchDownMelody[] PROGMEM = {  NOTE_E3,0, NOTE_D3,0, NOTE_CS3,0, NOTE_C3,0, NOTE_DS3,0, NOTE_E3,0 , NOTE_F3,0, NOTE_A3,0, NOTE_A3,0,
                             NOTE_F3,0, NOTE_E3,0, NOTE_D3,0,  NOTE_C3,0, NOTE_D3,0,  NOTE_E3,0 , NOTE_F3,0, NOTE_AS3,NOTE_AS3,0,
                             NOTE_A3,0, NOTE_G3,0, NOTE_C4,0,  NOTE_A3,0, NOTE_G3,0,  NOTE_FS3,0 ,NOTE_F3,0,
                             NOTE_E3,0, NOTE_F3,0, NOTE_FS3,0, NOTE_G3,0, NOTE_A3,0,  NOTE_B3,0 ,NOTE_C4,0, NOTE_C4,0, NOTE_C4,0,NOTE_C4,0};
const unsigned int MrTouchDownDurations[] PROGMEM = { NOTE_8,NOTE_8P,  NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_3,NOTE_3P, 
                                NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_4,NOTE_4P, NOTE_2,NOTE_2,NOTE_1P,
                                NOTE_4,NOTE_4P, NOTE_8,NOTE_8P, NOTE_2,NOTE_2P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P, NOTE_8,NOTE_8P, NOTE_2,NOTE_2P ,
                                NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P,
                                NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_8,NOTE_8P, NOTE_4,NOTE_4P};

const unsigned char tick[] PROGMEM = {
  0x7d,0x78,0x7a,0x7b,0x7b,0x79,0x79,0x7a,0x79,0x7c,0x7c,0x7c,0x7a,0x7b,0x7d,0x7f,0x79,0x81,0x7b,0x83,0x7c,0x82,0x7c,0x87,0x82,0x93,0x6c,0x6e,0xb4,0x79,0x70,0x69,0xa2,0xa5,0x78,0x49,0x82,0xb9,0x9a,0x61,0x52,0x9b,0xa8,0x92,0x4a,0x67,0x95,0xb2,0x81,0x56,0x71,0x8e,0xac,0x7a,0x3a,0x65,0xbe,0xa5,0x67,0x40,0x77,0xb9,0x83,0x54,0x5f,0x9b,0xac,0x71,0x55,0x5f,0x92,0x94,0x6b,0x73,0x7c,0x93,0x85,0x64,0x63,0x76,0x92,0x7d,0x6f,0x76,0x81,0x8b,0x71,0x5f,0x7e,0x84,0x87,0x75,0x6e,0x84,0x83,0x7e,0x6d,0x70,0x87,0x93,0x7a,0x6f,0x81,0x8e,0x83,0x70,0x70,0x89,0x8c,0x8b,0x80,0x73,0x85,0x86,0x7f,0x73,0x77,0x90,0x92,0x80,0x77,0x7b,0x88,0x84,0x80,0x86,0x89,0x8c,0x82,0x75,0x73,0x85,0x89,0x7d,0x7c,0x82,0x89,0x83,0x6c,0x73,0x84,0x86,0x81,0x76,0x82,0x7d,0x7f,0x7d,0x77,0x7a,0x80,0x86,0x80,0x7c,0x79,0x7d,0x85,0x73,0x7a,0x82,0x7c,0x87,0x82,0x79,0x78,0x7d,0x82,0x81,0x7c,0x84,0x84,0x7f,0x7d,0x80,0x7a,0x7c,0x7d,0x80,0x82,0x7d,0x7f,0x7d,0x82,0x7f,0x7a,0x7b,0x82,0x82,0x87,0x79,0x73,0x82,0x83,0x7e,0x79,0x81,0x84,0x86,0x80,0x7c,0x7d,0x7c,0x80,0x86,0x7f,0x79,0x7f,0x80,0x7f,0x7e,0x7e,0x81,0x7d,0x81,0x85,0x79,0x74,0x7e,0x81,0x7e,0x76,0x79,0x7f,0x81,0x79,0x7a,0x7c,0x7c,0x80,0x7f,0x7b,0x76,0x7a,0x7c,0x81,0x7a,0x7e,0x6f,0x87,0x89,0x76,0x7d,0x90,0x7d,0x4e,0x85,0x8e,0x97,0x83,0x57,0x8e,0xae,0x72,0x20,0x77,0xbf,0x95,0x87,0x8f,0x87,0x51,0x71,0x7f,0x65,0x7c,0xb9,0x7f,0x68,0x8d,0x61,0x70,0x8f,0x7c,0x71,0x7c,0x7a,0x99,0x78,0x5f,0x6b,0x92,0x88,0x80,0x96,0x7f,0x68,0x61,0x75,0x7f,0x61,0x92,0xa1,0x82,0x80,0x6d,0x8e,0x75,0x70,0x79,0x7e,0x9c,0x9b,0x7a,0x67,0x7f,0x89,0x6d,0x83,0x8b,0x84,0x7e,0x74,0x77,0x7d,0x8f,0x7c,0x6d,0x81,0x8e,0x94,0x7f,0x63,0x6f,0x73,0x85,0x7d,0x7d,0x83,0x99,0x97,0x70,0x5d,0x75,0x89,0x80,0x6e,0x83,0x98,0x82,0x71,0x67,0x69,0x77,0xa0,0x7d,0x73,0x80,0x7e,0x70,0x75,0x62,0x8a,0x91,0xaf,0x66,0x3d,0xd2,0x88,0x9c,0x2b,0x33,0xaf,0xed,0xce,0x20,0x48,0xa6,0xde,0x9e,0x03,0x9c,0xc8,0x82,0x3a,0x74,0xdc,0x67,0x41,0x81,0x9a,0xc3,0x7d,0x44,0x64,0x84,0x9f,0x78,0x8c,0x7d,0x85,0xc8,0x6d,0x43,0x78,0x88,0xbd,0x85,0x5e,0x72,0xaf,0x9c,0x37,0x59,0x82,0xb8,0x8c,0x5b,0x6d,0x96,0x9c,0x6a,0x4b,0x4f,0xa1,0xa9,0x6d,0x6c,0x7c,0x8b,0x79,0x71,0x6e,0x65,0x88,0x9e,0x83,0x6f,0x71,0x77,0x6d,0x70,0x87,0x98,0x76,0x5f,0x8c,0x78,0x76,0x7d,0x64,0x7c,0x92,0x8a,0x6d,0x6c,0x74,0x85,0x90,0x6d,0x73,0x91,0x75,0x6f,0x75,0x76,0x88,0x90,0x8a,0x5f,0x7b,0x8b,0x90,0x88,0x55,0x71,0xaf,0xa3,0x5d,0x65,0x87,0x90,0x88,0x74,0x68,0x86,0x9c,0x80,0x80,0x76,0x82,0x94,0x7b,0x6a,0x82,0x97,0x7c,0x86,0x86,0x76,0x6f,0x8c,0x95,0x7e,0x68,0x73,0xa7,0x91,0x6e,0x6b,0x7f,0x87,0x82,0x7f,0x70,0x7d,0x98,0x89,0x74,0x6f,0x71,0x8c,0x8a,0x76,0x7c,0x7c,0x81,0x85,0x82,0x66,0x79,0x89,0x8c,0x81,0x6d,0x75,0x84,0x85,0x7d,0x79,0x74,0x83,0x82,0x88,0x6d,0x6e,0x85,0x90,0x83,0x6f,0x78,0x7d,0x84,0x82,0x75,0x75,0x77,0x8c,0x8a,0x74,0x68,0x78,0x8c,0x88,0x7c,0x00
};
const unsigned char tweet[] PROGMEM = {
0x76,0x84,0x75,0x84,0x73,0x88,0x57,0x84,0x7c,0x67,0x93,0x60,0x9c,0x63,0x98,0x6b,0x90,0x6a,0x90,0x64,0x95,0x69,0x7b,0x82,0x59,0xb0,0x3b,0xcf,0x2e,0xcb,0x43,0x9a,0x76,0x57,0xb0,0x36,0xc3,0x46,0xa6,0x6d,0x80,0x81,0x7a,0x74,0x8e,0x63,0x95,0x62,0x83,0x7d,0x67,0x9a,0x5d,0x98,0x6f,0x7a,0x8c,0x63,0x98,0x72,0x7d,0x96,0x50,0xb4,0x39,0xb1,0x43,0x9c,0x65,0x7f,0x8c,0x66,0xa9,0x53,0xb7,0x49,0xaf,0x4f,0x9f,0x60,0x8c,0x6c,0x84,0x77,0x7c,0x87,0x6b,0xa1,0x4c,0xb4,0x45,0xa0,0x67,0x75,0x99,0x5b,0xa1,0x6c,0x70,0x9c,0x50,0xab,0x5f,0x8f,0x85,0x5e,0xa2,0x46,0xa6,0x5a,0x89,0x88,0x63,0x9e,0x61,0x84,0x8c,0x55,0xb8,0x42,0xbc,0x57,0x8f,0x7f,0x5f,0x9b,0x48,0xac,0x41,0xb5,0x43,0xbb,0x4f,0xa9,0x67,0x88,0x87,0x5d,0xa5,0x3f,0xbd,0x32,0xc0,0x45,0xad,0x68,0x7c,0x95,0x4c,0xac,0x49,0x9f,0x76,0x71,0x9f,0x5c,0x92,0x78,0x65,0xac,0x48,0xb6,0x53,0x95,0x73,0x62,0x97,0x52,0xa2,0x66,0x89,0x85,0x66,0x98,0x5f,0x8e,0x83,0x69,0xb0,0x47,0xba,0x3e,0xa6,0x50,0x8c,0x6b,0x6f,0x95,0x59,0xba,0x3f,0xca,0x39,0xc3,0x3e,0xaa,0x59,0x84,0x77,0x68,0xa4,0x43,0xcc,0x2a,0xce,0x3a,0x98,0x79,0x58,0xac,0x54,0x9a,0x7c,0x5f,0xa6,0x4b,0x9d,0x74,0x72,0xa6,0x4a,0xb5,0x46,0x9d,0x66,0x75,0x8f,0x63,0x90,0x74,0x6d,0x9e,0x49,0xb3,0x53,0x99,0x88,0x5f,0xb3,0x34,0xc5,0x2a,0xbe,0x3b,0xa5,0x62,0x88,0x8b,0x65,0xaa,0x49,0xb6,0x3f,0xb4,0x41,0xa8,0x4f,0x9b,0x68,0x8a,0x84,0x64,0xa2,0x46,0xb1,0x41,0xa5,0x5e,0x8d,0x80,0x77,0x83,0x80,0x6d,0x9a,0x62,0x8e,0x7f,0x51,0xb8,0x1c,0xe0,0x23,0xc5,0x6a,0x71,0xb6,0x1a,0xe8,0x20,0xde,0x32,0xa4,0x80,0x65,0xaf,0x47,0xac,0x52,0x98,0x66,0x92,0x5f,0xa1,0x49,0xad,0x42,0xaf,0x58,0x9b,0x80,0x6c,0xad,0x3c,0xc6,0x1f,0xcb,0x20,0xc1,0x41,0xa6,0x6b,0x89,0x8f,0x66,0xab,0x4b,0xb0,0x47,0xa5,0x55,0x92,0x6c,0x7d,0x77,0x83,0x69,0x9b,0x54,0xb3,0x52,0xab,0x60,0x87,0x87,0x58,0xa7,0x36,0xc1,0x25,0xcf,0x35,0xc8,0x50,0x99,0x86,0x5c,0xae,0x34,0xc4,0x3a,0xaa,0x69,0x7d,0x86,0x78,0x73,0x99,0x59,0xa9,0x5f,0x79,0x96,0x34,0xd3,0x17,0xe1,0x3b,0xa9,0x88,0x51,0xbe,0x23,0xc9,0x32,0xaa,0x5d,0x90,0x73,0x8d,0x6e,0x91,0x6f,0x88,0x7f,0x65,0x9f,0x3e,0xb6,0x33,0xbb,0x43,0xb2,0x57,0x99,0x77,0x7d,0x8d,0x5f,0xa0,0x51,0xa1,0x4c,0xa4,0x53,0xa3,0x58,0x9a,0x69,0x8f,0x76,0x7e,0x83,0x72,0x88,0x68,0x8b,0x62,0x97,0x55,0xa4,0x4b,0xb5,0x4c,0xa9,0x65,0x80,0x87,0x51,0xae,0x33,0xc3,0x3a,0xb3,0x5e,0x88,0x82,0x73,0x81,0x80,0x6e,0x8b,0x72,0x6d,0x96,0x3f,0xc0,0x2b,0xd5,0x3c,0xb7,0x67,0x78,0x95,0x49,0xac,0x48,0x98,0x6a,0x7c,0x83,0x75,0x76,0x9c,0x4f,0xc9,0x35,0xcc,0x40,0xa4,0x60,0x6f,0x94,0x3f,0xbd,0x30,0xcb,0x40,0xb8,0x5b,0x9a,0x71,0x82,0x7b,0x7d,0x7d,0x7d,0x75,0x7c,0x76,0x74,0x86,0x6a,0xa0,0x5b,0xb3,0x47,0xbe,0x3f,0xad,0x59,0x7e,0x95,0x50,0xbf,0x40,0xb2,0x5c,0x83,0x83,0x6d,0x88,0x7e,0x73,0x92,0x61,0x98,0x64,0x86,0x83,0x6b,0x97,0x64,0x91,0x70,0x7b,0x88,0x6d,0x8b,0x7c,0x67,0x9d,0x3c,0xb8,0x3b,0xab,0x61,0x8a,0x8f,0x60,0xae,0x46,0xb8,0x3a,0xb7,0x43,0xa6,0x58,0x91,0x73,0x81,0x84,0x70,0x98,0x5d,0xa8,0x49,0xb4,0x3c,0xaf,0x49,0x9c,0x69,0x80,0x90,0x61,0xa5,0x54,0x9d,0x67,0x88,0x7a,0x7e,0x76,0x89,0x5b,0xa3,0x48,0xb0,0x5c,0x93,0x89,0x63,0xac,0x3e,0xb6,0x48,0x98,0x6d,0x79,0x8b,0x6e,0x81,0x89,0x5d,0xae,0x48,0xb8,0x51,0x98,0x7b,0x58,0xab,0x22,0xd7,0x11,0xe0,0x30,0xbe,0x67,0x85,0x94,0x56,0xaa,0x41,0xae,0x43,0xa8,0x53,0x9a,0x64,0x94,0x6b,0x8d,0x71,0x8b,0x77,0x83,0x7d,0x6e,0x8d,0x56,0xa3,0x47,0xb5,0x45,0xb8,0x52,0x9c,0x6f,0x6d,0x9d,0x3d,0xbe,0x33,0xbe,0x4c,0xa3,0x6c,0x83,0x7d,0x81,0x73,0x8f,0x70,0x7a,0x84,0x52,0xb2,0x29,0xd4,0x28,0xd1,0x45,0xa3,0x7a,0x68,0xa0,0x4b,0xa8,0x55,0x8f,0x6f,0x7e,0x75,0x8a,0x5e,0xb2,0x3f,0xd4,0x30,0xd0,0x38,0xa6,0x65,0x66,0x99,0x32,0xd3,0x12,0xf0,0x1a,0xe0,0x3b,0xb5,0x5c,0x89,0x7a,0x66,0x90,0x56,0x9f,0x4b,0xb0,0x40,0xc4,0x3e,0xc6,0x42,0xb7,0x54,0x8b,0x7d,0x5a,0xad,0x39,0xc3,0x41,0xa7,0x69,0x81,0x7e,0x88,0x61,0xac,0x3f,0xb1,0x4a,0x86,0x88,0x4c,0xcf,0x23,0xe3,0x29,0xc3,0x4e,0x8d,0x7d,0x63,0x8e,0x6b,0x7d,0x83,0x6a,0x87,0x80,0x6c,0xac,0x43,0xd4,0x24,0xdc,0x1a,0xc4,0x30,0x99,0x69,0x64,0xb5,0x35,0xe7,0x18,0xee,0x1a,0xd0,0x33,0xa5,0x57,0x7f,0x84,0x6a,0xac,0x4b,0xc7,0x30,0xbf,0x41,0x9b,0x70,0x74,0x92,0x65,0x90,0x74,0x6f,0x92,0x64,0x95,0x79,0x73,0x9a,0x4d,0xae,0x45,0xa3,0x6d,0x77,0xa5,0x49,0xc0,0x3b,0xa9,0x5e,0x7d,0x91,0x59,0xae,0x4e,0xa5,0x62,0x83,0x84,0x6c,0x92,0x6f,0x79,0x90,0x52,0xae,0x40,0xaa,0x5c,0x8c,0x90,0x5c,0xbb,0x38,0xc8,0x2a,0xb9,0x3a,0x9a,0x64,0x80,0x8b,0x6b,0x9f,0x5c,0xa7,0x59,0xa1,0x5d,0x9b,0x61,0x92,0x62,0x93,0x60,0x8f,0x66,0x8e,0x77,0x7d,0x96,0x56,0xb8,0x37,0xc0,0x37,0xa7,0x66,0x77,0x9a,0x56,0xa7,0x5c,0x8a,0x7c,0x72,0x88,0x7c,0x67,0xa4,0x41,0xb5,0x47,0xa2,0x75,0x76,0xa2,0x50,0xae,0x49,0x9c,0x65,0x80,0x7b,0x7a,0x6e,0x96,0x4d,0xb3,0x49,0xac,0x6a,0x84,0x95,0x53,0xb3,0x34,0xbd,0x2f,0xbc,0x40,0xab,0x5e,0x97,0x7b,0x7b,0x97,0x60,0xa1,0x52,0xa1,0x4a,0xa7,0x47,0xaa,0x52,0xa2,0x61,0x92,0x7d,0x72,0x9b,0x43,0xbd,0x26,0xc1,0x49,0x95,0x8b,0x5b,0xa6,0x5e,0x89,0x83,0x69,0x8b,0x7c,0x61,0xa6,0x37,0xc2,0x35,0xb6,0x64,0x80,0x9e,0x3f,0xc5,0x2a,0xbb,0x4a,0x91,0x76,0x7a,0x76,0x8d,0x5d,0xaa,0x59,0x9e,0x78,0x6f,0xa0,0x40,0xb8,0x25,0xc2,0x2c,0xbd,0x4c,0xa9,0x6d,0x85,0x8e,0x64,0xa2,0x4f,0xa7,0x48,0xa7,0x43,0xae,0x44,0xb4,0x4e,0xa6,0x6a,0x84,0x8b,0x57,0xb2,0x31,0xc4,0x2e,0xbd,0x55,0x90,0x85,0x65,0x94,0x6e,0x78,0x96,0x67,0x85,0x85,0x4d,0xb9,0x26,0xd2,0x31,0xbe,0x63,0x7c,0xa4,0x3f,0xc2,0x2f,0xb7,0x4e,0x9e,0x66,0x8f,0x69,0x9b,0x65,0x9e,0x70,0x81,0x8e,0x52,0xac,0x34,0xbc,0x31,0xc0,0x41,0xb5,0x5c,0x98,0x7f,0x72,0x9d,0x4a,0xb1,0x37,0xb9,0x3a,0xb2,0x4c,0xad,0x5f,0x9b,0x78,0x75,0x98,0x4d,0xb2,0x34,0xbc,0x3b,0xb1,0x58,0x95,0x7f,0x6c,0x9d,0x53,0xa4,0x53,0x9a,0x66,0x87,0x7a,0x7f,0x72,0x96,0x5c,0xab,0x64,0x83,0x99,0x3b,0xca,0x15,0xd2,0x37,0x9f,0x8c,0x50,0xce,0x1f,0xcf,0x2f,0xa4,0x6c,0x70,0xa0,0x53,0xab,0x59,0x93,0x6f,0x81,0x76,0x86,0x69,0x91,0x5b,0x96,0x62,0x89,0x85,0x68,0xab,0x46,0xc7,0x28,0xc6,0x33,0xa5,0x5e,0x7f,0x8b,0x5c,0xb3,0x43,0xc9,0x33,0xcd,0x37,0xb7,0x4a,0x93,0x6d,0x6f,0x90,0x61,0xa1,0x5e,0xa1,0x61,0x9d,0x5e,0x9c,0x56,0xa5,0x47,0xa6,0x4e,0x97,0x6b,0x7c,0x93,0x5e,0xb2,0x47,0xb9,0x3f,0xb4,0x44,0xa7,0x55,0x8e,0x80,0x6a,0xab,0x4c,0xb7,0x49,0x9c,0x67,0x7a,0x85,0x73,0x77,0x8c,0x53,0xa3,0x55,0x8f,0x8a,0x59,0xc6,0x25,0xd1,0x2c,0xa3,0x74,0x63,0xb6,0x3e,0xc3,0x46,0xa0,0x69,0x78,0x84,0x72,0x77,0x88,0x64,0x91,0x69,0x7e,0x8e,0x5d,0xb4,0x42,0xbb,0x3d,0xab,0x4f,0x90,0x6e,0x73,0x92,0x5d,0xb1,0x46,0xc3,0x39,0xc4,0x38,0xae,0x4b,0x8e,0x6f,0x6e,0x98,0x59,0xb6,0x43,0xc4,0x40,0xba,0x41,0xaa,0x4b,0x97,0x60,0x7f,0x86,0x65,0xa9,0x4f,0xbb,0x45,0xba,0x43,0xac,0x4e,0x9b,0x5f,0x81,0x88,0x60,0xab,0x51,0xae,0x54,0xa2,0x61,0x8e,0x73,0x7f,0x76,0x84,0x67,0x90,0x6a,0x7e,0x99,0x50,0xc7,0x31,0xc0,0x49,0x8a,0x83,0x4d,0xc2,0x36,0xc1,0x52,0x8a,0x86,0x53,0xaa,0x54,0x97,0x7b,0x62,0xa3,0x47,0xa7,0x68,0x80,0xa1,0x45,0xc0,0x27,0xc3,0x37,0xa5,0x6d,0x74,0xae,0x3c,0xdd,0x1c,0xdb,0x20,0xb7,0x4b,0x88,0x81,0x61,0xad,0x44,0xc1,0x41,0xb9,0x46,0xad,0x4c,0x9d,0x57,0x8b,0x6c,0x79,0x8b,0x61,0xae,0x49,0xc3,0x39,0xb8,0x49,0x95,0x74,0x71,0x87,0x71,0x7b,0x88,0x71,0x80,0x97,0x51,0xcb,0x21,0xce,0x38,0x92,0x8c,0x45,0xd2,0x2c,0xcd,0x49,0x86,0x92,0x3f,0xca,0x33,0xc3,0x5e,0x7f,0x9c,0x3f,0xb6,0x41,0xa5,0x64,0x84,0x7d,0x82,0x72,0x95,0x64,0x9d,0x66,0x8b,0x7d,0x61,0xa4,0x3c,0xba,0x33,0xc2,0x40,0xae,0x69,0x8a,0x8a,0x61,0x9f,0x49,0xac,0x45,0xaf,0x4b,0xa9,0x5c,0x97,0x76,0x7e,0x8a,0x64,0x9b,0x52,0xa3,0x4f,0x9f,0x61,0x8c,0x7d,0x76,0x87,0x76,0x7c,0x81,0x77,0x79,0x87,0x52,0xae,0x36,0xbb,0x53,0x97,0x8d,0x50,0xc4,0x1e,0xd0,0x25,0xaf,0x62,0x76,0xa5,0x4a,0xbe,0x3c,0xaf,0x51,0x92,0x6a,0x80,0x72,0x85,0x6c,0x84,0x76,0x7d,0x8e,0x66,0xa7,0x47,0xb9,0x31,0xbb,0x39,0xa3,0x5f,0x80,0x91,0x5d,0xb5,0x40,0xc6,0x34,0xc2,0x32,0xb2,0x45,0x97,0x6b,0x78,0x99,0x5b,0xb7,0x43,0xc0,0x40,0xb2,0x46,0xa4,0x55,0x93,0x6c,0x7f,0x8f,0x67,0xad,0x49,0xbd,0x3f,0xac,0x55,0x86,0x82,0x66,0xa0,0x5e,0x8b,0x83,0x5b,0xa6,0x65,0x83,0x9e,0x40,0xc5,0x2d,0xab,0x6b,0x6c,0xb8,0x33,0xd3,0x32,0xa1,0x73,0x52,0xbd,0x2e,0xd0,0x47,0x9c,0x83,0x54,0xae,0x41,0xa9,0x5d,0x8c,0x79,0x7d,0x7c,0x84,0x6f,0x90,0x6f,0x83,0x81,0x5f,0xa3,0x3d,0xbc,0x3f,0xba,0x57,0x97,0x82,0x66,0xa1,0x48,0xae,0x3e,0xb3,0x39,0xba,0x47,0xb0,0x64,0x8f,0x8d,0x60,0xa8,0x3b,0xbc,0x2c,0xbf,0x34,0xba,0x4d,0xa9,0x6b,0x88,0x8e,0x5f,0xa9,0x35,0xc7,0x1d,0xd2,0x2c,0xb8,0x61,0x82,0x97,0x55,0xb0,0x4b,0xa2,0x5d,0x8a,0x73,0x83,0x61,0xa3,0x43,0xbd,0x4f,0x9c,0x8d,0x4c,0xc8,0x1f,0xc5,0x45,0x97,0x8a,0x5b,0xb2,0x45,0xa1,0x66,0x6e,0xa3,0x4a,0xb9,0x4f,0x9b,0x77,0x63,0xa2,0x46,0xae,0x56,0x98,0x6c,0x85,0x7b,0x81,0x79,0x80,0x79,0x79,0x85,0x62,0x96,0x52,0xa7,0x4f,0xa4,0x63,0x8c,0x7b,0x6c,0x95,0x50,0xab,0x46,0xac,0x54,0x9a,0x72,0x81,0x86,0x66,0x97,0x56,0xa0,0x4a,0xa7,0x56,0x9c,0x71,0x78,0x9a,0x4f,0xb2,0x3d,0xaa,0x55,0x87,0x83,0x66,0xa5,0x57,0x9d,0x63,0x85,0x78,0x7b,0x77,0x86,0x64,0x91,0x6c,0x7e,0x9b,0x4b,0xc6,0x2b,0xb4,0x54,0x6c,0xaa,0x35,0xd7,0x34,0xb5,0x64,0x71,0x9c,0x44,0xb5,0x52,0x99,0x7b,0x6b,0x98,0x5b,0x92,0x78,0x73,0x9a,0x5e,0x99,0x69,0x7b,0x85,0x67,0x95,0x67,0x8e,0x71,0x81,0x78,0x7c,0x79,0x85,0x70,0x88,0x6f,0x81,0x7d,0x6d,0x94,0x5a,0xac,0x50,0xa7,0x57,0x91,0x75,0x6e,0x91,0x58,0xa9,0x48,0xb6,0x4e,0xb2,0x59,0x93,0x75,0x66,0x9e,0x3c,0xbf,0x39,0xc3,0x4e,0x9b,0x7d,0x62,0xa4,0x3d,0xb5,0x42,0xa8,0x6a,0x84,0x8b,0x67,0x91,0x6c,0x85,0x7b,0x7c,0x70,0x91,0x4f,0xaf,0x4b,0xa5,0x79,0x66,0xb6,0x29,0xc5,0x3b,0x95,0x7c,0x63,0xa7,0x53,0xa0,0x67,0x80,0x84,0x6f,0x88,0x77,0x74,0x8d,0x60,0x92,0x7a,0x72,0x97,0x55,0x9f,0x5f,0x82,0x88,0x62,0xa1,0x5e,0x91,0x75,0x76,0x89,0x6f,0x8c,0x70,0x87,0x79,0x7c,0x7f,0x7a,0x82,0x7a,0x7e,0x7e,0x7a,0x7b,0x81,0x74,0x88,0x74,0x83,0x7a,0x79,0x85,0x6e,0x89,0x72,0x83,0x7c,0x76,0x85,0x71,0x81,0x7a,0x79,0x80,0x76,0x7d,0x7a,0x77,0x81,0x79,0x7f,0x7c,0x75,0x80,0x76,0x82,0x76,0x7f,0x7c,0x7d,0x7d,0x7d,0x80,0x7a,0x86,0x6e,0x8d,0x66,0x87,0x7a,0x75,0x96,0x60,0x9d,0x66,0x7c,0x8a,0x5a,0xaa,0x5c,0x92,0x84,0x58,0xa9,0x45,0xa1,0x6e,0x7b,0x8f,0x69,0x91,0x6b,0x8e,0x67,0x90,0x68,0x87,0x73,0x7c,0x87,0x6f,0x92,0x69,0x90,0x6d,0x83,0x78,0x77,0x83,0x74,0x84,0x7a,0x77,0x85,0x71,0x83,0x82,0x6e,0x8f,0x68,0x83,0x83,0x6a,0x94,0x6b,0x83,0x82,0x62,0x9a,0x60,0x95,0x76,0x79,0x90,0x5d,0x97,0x60,0x8e,0x76,0x76,0x8d,0x6a,0x8b,0x71,0x7d,0x7f,0x72,0x88,0x72,0x84,0x78,0x7d,0x82,0x6e,0x89,0x6e,0x8b,0x75,0x7f,0x84,0x70,0x88,0x71,0x81,0x7e,0x75,0x89,0x6f,0x87,0x77,0x73,0x8c,0x66,0x94,0x6b,0x87,0x7b,0x75,0x89,0x69,0x8d,0x70,0x83,0x78,0x7c,0x7d,0x7f,0x78,0x84,0x75,0x81,0x7d,0x6f,0x90,0x62,0x95,0x6d,0x84,0x86,0x69,0x91,0x66,0x89,0x76,0x7a,0x84,0x74,0x83,0x77,0x7c,0x81,0x77,0x83,0x7a,0x7a,0x80,0x70,0x87,0x6f,0x84,0x7c,0x76,0x86,0x6f,0x86,0x77,0x7e,0x7c,0x7c,0x77,0x80,0x78,0x7e,0x81,0x74,0x87,0x72,0x80,0x7a,0x7c,0x7c,0x77,0x82,0x75,0x87,0x73,0x7c,0x80,0x70,0x85,0x72,0x83,0x76,0x7d,0x7d,0x77,0x83,0x72,0x84,0x75,0x81,0x73,0x86,0x79,0x7a,0x85,0x71,0x87,0x71,0x84,0x74,0x7f,0x7d,0x76,0x85,0x72,0x86,0x76,0x7e,0x7e,0x77,0x84,0x78,0x7f,0x7c,0x7d,0x7e,0x79,0x7d,0x7b,0x7d,0x79,0x7e,0x7b,0x00
};  


                        
#endif
